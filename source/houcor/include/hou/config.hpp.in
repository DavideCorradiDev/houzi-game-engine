// Houzi Multimedia Library
// Copyright (c) 2016-2017 Davide Corradi
// Licensed under the MIT license.

#ifndef HOU_CONFIG_HPP
#define HOU_CONFIG_HPP

#include <cstddef>
#include <cstdint>

// Values from CMakeLists.txt
#define HOU_VERSION_MAJOR @HOU_VERSION_MAJOR@
#define HOU_VERSION_MINOR @HOU_VERSION_MINOR@
#define HOU_VERSION_PATCH @HOU_VERSION_PATCH@

// OS symbols definition
#if defined(_WIN32)
  #define HOU_SYSTEM_WINDOWS
  #define UNICODE
#elif defined(__linux__)
  #define HOU_SYSTEM_LINUX
#endif

#if defined(__EMSCRIPTEN__)
  #define HOU_EMSCRIPTEN
#endif

#if defined(__MINGW32__)
  #define HOU_COMPILER_MINGW
#elif defined(_MSC_VER)
  #define HOU_COMPILER_MSVC
#elif defined(__GNUC__)
  #if defined(__clang__)
    #define HOU_COMPILER_CLANG
  #else
    #define HOU_COMPILER_GCC
  #endif
#endif

// Define export statements
#if defined(HOU_STATIC)
  #define HOU_EXPORT
  #define HOU_IMPORT
#else
  #if defined(HOU_SYSTEM_WINDOWS)
    #define HOU_EXPORT __declspec(dllexport)
    #define HOU_IMPORT __declspec(dllimport)
  #else
    #if __GNUC__ >= 4
      #define HOU_EXPORT __attribute__((__visibility__("default")))
      #define HOU_IMPORT __attribute__((__visibility__("default")))
    #else
      #define HOU_EXPORT
      #define HOU_IMPORT
    #endif
  #endif
#endif

/** Houzi Game Engine namespace.*/
namespace hou
{

/** Unsigned int. */
using uint = unsigned int;

/** Unsigned char */
using uchar = unsigned char;

#if defined(HOU_COMPILER_MSVC)
  using size_t = size_t;
#else
  /** Size type. */
  using size_t = std::size_t;
#endif

}  // namespace hou

#endif
